{"version":3,"sources":["api/users.ts","services/User.ts","components/TodoForm/TodoForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","findUserById","userId","usersFromServer","find","user","TodoForm","onSubmit","useState","title","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","reset","action","method","event","preventDefault","trim","completed","onReset","className","htmlFor","type","value","onChange","target","placeholder","map","UserInfo","href","TodoInfo","todo","classNames","TodoList","todos","App","todosInfo","todosFromServer","todoList","setTodoList","data","newTodo","Math","max","currentList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.088f5c83.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","// eslint-disable-next-line @typescript-eslint/quotes\nimport usersFromServer from \"../api/users\";\n\nexport function findUserById(userId: number) {\n  return usersFromServer.find((user) => user.id === userId) || null;\n}\n","/* eslint-disable @typescript-eslint/quotes */\nimport React, { useState } from \"react\";\nimport { Todo } from \"../../types/Todo\";\nimport usersFromServer from \"../../api/users\";\nimport { findUserById } from \"../../services/User\";\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState(\"\");\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const reset = () => {\n    setTitle(\"\");\n    setHasTitleError(false);\n    setUserId(0);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title || !title.trim()) {\n      setHasTitleError(true);\n    }\n\n    if (!userId) {\n      setHasUserIdError(true);\n    }\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title,\n      completed: false,\n      userId: 0,\n      user: findUserById(userId),\n    });\n\n    reset();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n      onReset={reset}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"todo-title\">Title:</label>\n\n        <input\n          id=\"todo-title\"\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={title}\n          onChange={handleTitleChange}\n          placeholder=\"Enter a title\"\n        />\n\n        {hasTitleError && <span className=\"error\">Please enter a title</span>}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"todo-user\">User:</label>\n\n        <select\n          id=\"todo-user\"\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserChange}\n        >\n          <option value=\"0\">Choose a user</option>\n\n          {usersFromServer.map((user) => (\n            <option value={user.id} key={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserIdError && <span className=\"error\">Please choose a user</span>}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","// eslint-disable-next-line @typescript-eslint/quotes\nimport { User } from \"../../types/User\";\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","/* eslint-disable @typescript-eslint/quotes */\nimport classNames from \"classnames\";\nimport { Todo } from \"../../types/Todo\";\nimport { UserInfo } from \"../UserInfo\";\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\"TodoInfo\", {\n        \"TodoInfo--completed\": todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","/* eslint-disable @typescript-eslint/quotes */\nimport { Todo } from \"../../types/Todo\";\nimport { TodoInfo } from \"../TodoInfo\";\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","/* eslint-disable @typescript-eslint/quotes */\nimport { useState } from \"react\";\nimport { findUserById } from \"./services/User\";\nimport { Todo } from \"./types/Todo\";\nimport { TodoForm } from \"./components/TodoForm/TodoForm\";\nimport { TodoList } from \"./components/TodoList\";\n\nimport todosFromServer from \"./api/todos\";\nimport \"./App.scss\";\n\nexport const App = () => {\n  const todosInfo = todosFromServer.map((todo) => ({\n    ...todo,\n    user: findUserById(todo.userId),\n  }));\n\n  const [todoList, setTodoList] = useState<Todo[]>(todosInfo);\n\n  const maxTodoId = (todos: Todo[]) => {\n    return Math.max(...todos.map((todo) => todo.id)) + 1;\n  };\n\n  const addTodo = ({ id, ...data }: Todo) => {\n    const newTodo = {\n      id: maxTodoId(todoList),\n      ...data,\n    };\n\n    setTodoList((currentList) => [...currentList, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm onSubmit={addTodo} />\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}